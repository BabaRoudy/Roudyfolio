
    * {
      margin: 0;
      padding: 0;
      box-sizing: border-box;
    }

    body {
      font-family: -apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, Helvetica, Arial, sans-serif;
      line-height: 1.6;
      color: #f8f9fa;
    }

    .container {
      max-width: 1200px;
      margin: 0 auto;
      padding: 2rem;
    }

    .hero {
      height: 100vh;
      display: flex;
      align-items: center;
      justify-content: center;
      text-align: center;
      background-color: #333;
    }

    .hero h1 {
      font-size: 4rem;
      margin-bottom: 1rem;
    }

    .hero p {
      font-size: 1.5rem;
      color: #666;
    }

    .portfolio-item {
      margin: 8rem 0;
      opacity: 0;
      transform: translateY(20px);
      transition: opacity 0.8s ease-out, transform 0.8s ease-out;
    }

    .portfolio-item.visible {
      opacity: 1;
      transform: translateY(0);
    }

    .portfolio-item img {
      width: 70%;
      height: auto;
      margin-bottom: 2rem;
      border-radius: 8px;
      box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
    }

    .portfolio-item h2 {
        color: #f8f6f6;
      font-size: 2rem;
      margin-bottom: 1rem;
    }

    .portfolio-item p {
      color: #f8f6f6;
      font-size: 1.1rem;
    }




    @property --offset {
        syntax: '<number>';
        initial-value: 440;
        inherits: true;
      }
      
      :root {
        --color-pure-white: hsl(66, 100%, 50%);
        --color-light-gray: hsl(0, 0%, 93%);
        --color-black: hsla(0, 7%, 24%, 0.89);
        --color-translucid-black: hsla(0, 0%, 15%, 0.5);
        --color-dimished-black: hsla(69, 98%, 50%, 0.15);
        --color-vibrant-red: hsl(2, 96%, 45%); 
        --color-red: hsl(0, 100%, 50%);
        --color-blue: hsl(250, 67%, 22%);
        --color-orange: hsl(15, 100%, 60%);
        --color-rich-violet: hsla(292, 66%, 43%, 0.75);
        --color-main: var(--color-vibrant-red);
        --color-sec: var(--color-light-gray);
        --color-html: var(--color-red);
        --color-background: var(--color-black);
        --color-levels-bg: var(--color-translucid-black);
        --color-skill-svg-stroke: var(--color-pure-white);
        --percentage: 0;
      }
      
      * {
        margin: 0;
        padding: 0;
        box-sizing: border-box;
      }
      
      body {
        background: var(--color-background);
      }
      
      input {
        display: none;
      }
      
      .container {
        width: fit-content;
        margin: 0 10px 10px;
        /*height: 200vh;*/
      }
      
      .levels, .skills {
        display: flex;
        width: fit-content;
        margin: 0 auto;
        flex-wrap: wrap;
        justify-content: center;
      }
      
      .levels {
        gap: 20px;
        padding: 0 20px;
        margin-bottom: 40px;
        position: sticky;
        padding: 10px 30px;
        top: 30px;
        z-index: 10;
        backdrop-filter: blur(10px);
        background: var(--color-levels-bg);
        border-radius: 24px;
      }
      
      .level {
        display: inline-flex;
        background-color: var(--color-sec);
        color: var(--color-blue);
        width: 40px;
        height: auto;
        justify-content: center;
        align-items: center;
        border-radius: 50%;
        aspect-ratio: 1/1;
        cursor: pointer;
      }
      
      input:checked + label {
        background-color: var(--color-main);
        color: rgb(248, 252, 4);
        animation: pulse 0.75s linear;
      }
      
      .qualifications {
        margin: 0 15px;
        padding: 10px;
        background: var(--color-main);
        border-radius: 20px;
      }
      
      .qualifications__skill {
        display: flex;
        color: white;
        padding: 10px 10px 10px 50px;
        position: relative;
      }
      
      .qualifications__skill > .qs__icon {
        position: absolute;
        display: flex;
        align-items: center;
        justify-content: center;
        width: 45px;
        height: 45px;
        backdrop-filter: blur(10px);
        background: var(--color-qual-icon-bg);
        border-radius: 50%;
        top: 50%;
        left: 0;
        transform: translateY(-50%);
        padding: 5px;
      }
      
      .qualifications__skill::before {
        content: '';
        width: 0px;
        min-height: 100%;
        border: solid var(--color-levels-bg) 3px;
        border-radius: 24px;
      }
      
      .qs__content {
        padding: 10px;
      }
      
      .qs__list {
        margin-top: 0.5rem;
        padding-left: 1rem;
      }
      
      .progressbar {
        position: relative;
        width: 170px;
        height: 170px;
        margin: 1em;
        transform: rotate(-90deg);
      }
      
      .progressbar__svg {
        position: relative;
        width: 100%;
        height: 100%;
      }
      
      .progressbar__svg-circle {
        width: 100%;
        height: 100%;
        fill: none;
        stroke-width: 10;
        stroke-dasharray: 440;
        stroke: hsl(0, 0%, 100%);
        stroke-linecap: round;
        transform: translate(5px, 5px);
        --offset: calc(440 * (1 - var(--percentage) / 100));
        stroke-dashoffset: var(--offset);
        transition: stroke-dashoffset 2s ease;
      }
      
      .progressbar__text {
        position: absolute;
        top: 75%;
        left: 10%;
        padding: 0.25em 0.5em;
        color: var(--color-skill-svg-stroke);
        font-family: Arial, Helvetica, sans-serif;
        border-radius: 0.25em;
        transform: translate(-50%, -50%) rotate(90deg);
      }
      
      .shadow {
        filter: drop-shadow(0 0 5px var(--color-html));
      }
      
      .container:has(input:nth-of-type(1):checked){
        --percentage:90;
      }
      .container:has(input:nth-of-type(2):checked){
        --percentage:80;
      }
      .container:has(input:nth-of-type(3):checked) {
        --percentage: 85;
      }
      
      .container:has(input:nth-of-type(4):checked),
      .container:has(input:nth-of-type(5):checked),
      .container:has(input:nth-of-type(6):checked) {
        --percentage: 70;
      }
      
      .container:has(input:nth-of-type(7):checked) {
        --percentage: 100;
      }
      
      
      .container:has(input:nth-of-type(n+1):nth-of-type(-n+4):checked) > .qualifications > .qualifications__skill:not(:first-child) {
        display: none;
      }
      
      @keyframes pulse {
        0% {
          transform: scale(1);
        }
        50% {
          transform: scale(1.2);
        }
        100% {
          transform: scale(1);
        }
      }


      
      /* Primary */




body {


  font-family: sans-serif;
  background: #332c2c;
}

a {
  text-decoration: none;
}

/* Button and the icon */
section {
  width: 100%;
  height: 100vh;
  display: table;
}

.center {
  display: table-cell;
  vertical-align: middle;
  text-align: center;
}

.trigger {
  font-size: 100%;
  position: relative;
  background: #0fc3cf;
  display: inline-block;
  width: 200px;
  height: 60px;
  border-radius: 50em;
  box-shadow: 0 2px 20px rgba(0,0,0,0.7), inset 0 1px 0 rgba(255,255,255,0.2);
  color: #fff;
}

span, em, i {
  position: absolute;
  height: 100%;
  width: 100%;

  left: 0;
  /*background: yellow;
  opacity: .5;*/
}

em, i {
 
  transition: top 0.3s;
}

span {
 
  /*
  uncomment this to see where actually the
  Download and SVG located on initial state
  and on hover
  */
  overflow: hidden;
}

em {
  line-height: 60px; /*make the button text vertically center of the button*/
  top: 0;
}

i {
  top: 100%; /*moving out the SVG to the bottom on page loads*/
  padding-top:20px;
}

i::before {
  content: url(assets/SVG.svg);
  font-family: FontAwesome;
  font-size: 2rem;
}

.trigger:hover em {
  top: -100%; /* move the Download text to the top*/
}

.trigger:hover i {
  top: 0;
}

/*Tooltip*/
.trigger::before,
.trigger::after {
  position: absolute;
  opacity: 0; /*hide on page load*/
  visibility: hidden; /*to stop interaction when user hover on top of the button*/
  transition: all 0.3s;
}

.trigger::before {
  content: "File size: 115KB";
  width: 140px;
  height: 60px;
  line-height: 60px; /*to make the text vertically center*/
  background: #0fc3cf;
  border-radius: 0.25em;
  bottom: 90px;
  left: calc(50% - 70px); /*take the left size of the box and pull it left by 70px (half of the box's width) referencing .trigger element as the base*/
}

/*the triangle below the `File size` box*/
.trigger::after {
  content: "";
  width: 0;
  height: 0;
  border: 10px solid transparent;
  /*
  each border side is 10px width
  this makes the square 20px width in total
  left to center = 10px
  center to right = 10px
  */
  border-top-color: #0fc3cf;
  left: calc(50% - 10px); /*take the left size of the box and pull it left by 10px (half of the box's width) referencing .trigger element as the base*/
  bottom: 70px;
}

.trigger:hover::before,
.trigger:hover::after {
  opacity: 1;
  visibility: visible;
}

/*pull down effect for the `File size` box when we hover the button*/
.trigger:hover::before {
  bottom: 80px;
}

.trigger:hover::after {
  bottom: 60px;
}

/*Back Button*/


.button {
  display: inline-block;
  border: 2px solid #ffffff;
  padding: 10px 20px;
  color: #ffffff;
  text-decoration: none;
  transition: 0.3s;
}

.button:hover {
  background: #686262;
  color: #a39c9c;
}